/**
 * Force Hardware Acceleration
 */
@mixin accel() {
    @include translate3d(0,0,0);
}

/**
 * Perspective
 */
@mixin perspective($value) {
    @include p((perspective: $value));
}

/**
 * Rotate
 */
@mixin rotate($degrees) {
    @include p((transform: rotate($degrees + deg)));
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}

/**
 * Rotate X
 */
@mixin rotateX($degrees) {
    @include p((transform: rotateX($degrees + deg)));
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}

/**
 * Rotate Y
 */
@mixin rotateY($degrees) {
    @include p((transform: rotateY($degrees + deg)));
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}

/**
 * Skew
 *
 * @param int x X degree value to skew
 * @param int y Y degree value to skey
 */
@mixin skew($x, $y)
{
    @include p((transform: skewX($x) skewY($y)));
}

/**
 * Skew by X axis
 */
@mixin skewX($value)
{
    @include p((transform: skewX($value)));
}

/**
 * Skew by Y axis
 */
@mixin skewY($value)
{
    @include p((transform: skewY($value)));
}

/**
 * Transform
 */
@mixin transform($value) {
    @include p((transform: $value));
}

/**
 * Transform Origin
 */
@mixin transform-origin($value) {
    @include p((transform-origin: $value));
}

/**
 * Transform Translate 3D
 */
@mixin translate3d($x, $y, $z) {
    @include p((transform: translate3d($x,$y,$z)));
}