/**
 * Device
 *
 * Generate a media query targetted at a particular device or devices greater than or less than
 * a given device.
 */
@mixin device( $device ) {

    $device:   deprecated-devices( $device );
    $operator: null;


    @if str-index( $device, 'lt-' ) or str-index( $device, 'gt-' )  {
        $operator: str-slice( $device, 0, 2 );
        $device:   str-slice( $device, 4, str-length( $device ) );
    }

    $sizes: map-get( $responsiveMap, $device );
    $query: '';

    @if $operator == null {
        @each $key, $value in $sizes {
            $query: $query + ' and (' + $key + '-width:' + $value + ')';
        }
    } @else {

        // Less than
        @if $operator == 'lt'  {
            $query: $query + ' and ( max-width:' + if( map-has-key( $sizes, min ), map-get( $sizes, min ), 0 ) + ')';
        }

        // Greater than
        @if $operator == 'gt'  {
            $query: $query + ' and ( min-width:' + if(map-has-key( $sizes, max ), map-get($sizes, max), 9999999px) + ')';
        }
    }


    @media only screen #{$query} {
        @content;
    }
}

/**
 * Device mixin alias
 */
@mixin d( $device ) { @include device( $device ) { @content } }

/** Aliases */
@mixin mobile           { @include d(mobile) { @content; } }
@mixin mobile-portrait  { @include d(mobile-portrait) { @content; } }
@mixin mobile-landscape { @include d(mobile-landscape) { @content; } }
@mixin tablet           { @include d(tablet) { @content; } }
@mixin tablet-portrait  { @include d(tablet-portrait) { @content; } }
@mixin tablet-landscape { @include d(tablet-landscape) { @content; } }
@mixin desktop          { @include d(desktop) { @content; } }
@mixin large-device     { @include d(large) { @content; } }

@mixin lt-mobile           { @include d(lt-mobile) { @content; } }
@mixin lt-mobile-portrait  { @include d(lt-mobile-portrait) { @content; } }
@mixin lt-mobile-landscape { @include d(lt-mobile-landscape) { @content; } }
@mixin lt-tablet           { @include d(lt-tablet) { @content; } }
@mixin lt-tablet-portrait  { @include d(lt-tablet-portrait) { @content; } }
@mixin lt-tablet-landscape { @include d(lt-tablet-landscape) { @content; } }
@mixin lt-desktop          { @include d(lt-desktop) { @content; } }
@mixin lt-large-device     { @include d(lt-large) { @content; } }

@mixin gt-mobile           { @include d(gt-mobile) { @content; } }
@mixin gt-mobile-portrait  { @include d(gt-mobile-portrait) { @content; } }
@mixin gt-mobile-landscape { @include d(gt-mobile-landscape) { @content; } }
@mixin gt-tablet           { @include d(gt-tablet) { @content; } }
@mixin gt-tablet-portrait  { @include d(gt-tablet-portrait) { @content; } }
@mixin gt-tablet-landscape { @include d(gt-tablet-landscape) { @content; } }
@mixin gt-desktop          { @include d(gt-desktop) { @content; } }
@mixin gt-large-device     { @include d(gt-large) { @content; } }

/**
 * Deprecation notices and backwards compatibility implementation for previous device names
 *
 * @param  {string} $device device identifier
 * @return {string}         device identifier
 */
@function deprecated-devices( $device ) {

    @if str-index( $device, 'tabletPortrait' ) {
        @warn "Using deprecated device identifier 'tabletPortrait'. Use 'tablet-portrait' instead.";
        $device: str-slice( $device, 1, str-index( $device, 'tabletPortrait' ) - 1 ) + 'tablet-portrait';
    }

    @if str-index( $device, 'tabletLandscape' ) {
        @warn "Using deprecated device identifier 'tabletLandscape'. Use 'tablet-landscape' instead.";
        $device: str-slice( $device, 1, str-index( $device, 'tabletPortrait' ) - 1 ) + 'tablet-portrait';
    }

    @if str-index( $device, 'mobilePortrait' ) {
        @warn "Using deprecated device identifier 'mobilePortrait'. Use 'mobile-portrait' instead.";
        $device: str-slice( $device, 1, str-index( $device, 'mobilePortrait' ) - 1 ) + 'mobile-portrait';
    }

    @if str-index( $device, 'mobileLandscape' ) {
        @warn "Using deprecated device identifier 'mobileLandscape'. Use 'mobile-landscape' instead.";
        $device: str-slice( $device, 1, str-index( $device, 'mobilePortrait' ) - 1 ) + 'mobile-portrait';
    }

    @return $device;
}