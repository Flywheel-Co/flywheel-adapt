@charset "UTF-8";

////
/// Hamburger button mixin
///
/// Generates a hamburger-style button.
///
/// This mixin requires you have a child span element in the DOM. Additionally, you can toggle an
/// .active class with javascript to switch the state of the hamburger.
///
/// @since 1.0.0
///
/// @param {color}  $color    [#333] hamburger bar color
/// @param {length} $width    [24px] hamburger width
/// @param {length} $height   [18px] hamburger height
/// @param {length} $bar-size [4px] bar height
///
/// @example scss
///     #menu-button {
///         @include hamburger( #555, 32px, 20px, 3px );
///     }
///
/// @example html
///     <div id="menu"><span></span></div>
////
@mixin hamburger( $color: #333, $width: 24px, $height: 18px, $bar-size: 4px ) {
    position: relative;
    height: $height;
    width: $width;

    %buns {
        display: block;
        position: absolute;
        height: $bar-size;
        width: $width;
        background-color: $color;
        left: 0;
        @include transition( all, .25s, ease );
    }

    &> span {
        @extend %buns;
        top: $height / 2;
        margin-top: -($bar-size / 2);

        &:before,
        &:after {
            @extend %buns;
            content: '';
        }

        &:before {
            top: -( $height / 2 );
            margin-top: $bar-size / 2;
        }

        &:after {
            top: $height /2;
            margin-top: -($bar-size / 2);
        }

    }

    &.active > span {
        height: 0;
        width: 0;
        top: 50%;
        left: 50%;

        &:before,
        &:after {
            top: 50%;
            left: -( $width / 2 );
            margin: 0;
        }

        &:before {
            @include rotate( 225 );
        }

        &:after {
            @include rotate( -225 );
        }

    }
}