@charset "UTF-8";

////
/// Background gradient mixins
///
/// @since 1.0.0
////

/// Define a background gradient and ouput the vendor prefixed result
///
/// @since 1.0.0
///
/// @param {String} $start-color - beginning color of the gradient
/// @param {String} $end-color   - end color of the gradient
/// @param {String} $direction   - [top] direction of the gradient
@mixin background-gradient( $start-color, $end-color, $direction: top ) {
    background-color: $start-color;
    background: -webkit-gradient(linear, left $direction, left $direction, from($start-color), to($end-color));
    background: -webkit-linear-gradient($direction, $start-color, $end-color);
    background: -moz-linear-gradient($direction, $start-color, $end-color);
    background: -ms-linear-gradient($direction, $start-color, $end-color);
    background: -o-linear-gradient($direction, $start-color, $end-color);
    background: linear-gradient(to $direction, $start-color, $end-color);
}

/// Background gradient alias
///
/// @since 1.0.0
/// @alias background-gradient
@mixin gradient( $start-color, $end-color, $direction: top ) {
	@include background-gradient($start-color, $end-color, $direction);
}

/// Define a linear gradient and ouput the vendor prefixed result
///
/// @since 1.0.0
///
/// @param {String} $direction   - direction of the gradient
/// @param {List}   $color-stops - number of colors and stops
@mixin linear-gradient( $direction, $color-stops... ) {

	// Direction has been omitted and happens to be a color-stop
	@if is-direction($direction) == false {
		$direction: 180deg;
	}

	background: nth($color-stops, 1);
	background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
	background: linear-gradient($direction, $color-stops);
}