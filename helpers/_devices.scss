/**
*   Device mixin to be used for media queries
*
*   Options are :
*   mobile, mobile-portrait, monbile-landscape, tablet, tablet-portrait, tablet-landscape, desktop
*
*   @include device(mobile) { content }
**/

/**
 * Device break points based on default settings
 */
$mediaMobilePortrait: $mobilePortraitSize;
$mediaMobileLandscape: $mobileLandscapeSize;
$mediaTabletPortrait: $tabletPortraitSize;
$mediaTabletLandscape: $tabletLandscapeSize;
$mediaDesktop: $desktopSize;

/**
 * Device mixin SASS if/else tree
 *
 * Set media queries based on keyword 
 * and default sizes in settings.
 *
 * Keyword options ------
 * mobile
 * mobile-landscape
 * mobile-portrait
 * tablet
 * tablet-landscape
 * tablet-portrait
 * desktop
 */
@mixin device($media) {
    @if $media == mobile { 
        @media only screen and (max-width: $mediaMobileLandscape) { @content; }
    } @else if $media == tablet { 
        @media only screen and (min-width : $mediaMobileLandscape+1) and (max-width : $mediaTabletLandscape) { @content; }
    } @else if $media == mobile-portrait { 
        @media only screen and (max-width: $mediaMobilePortrait) { @content; }
    } @else if $media == mobile-landscape { 
        @media only screen and (min-width: $mediaMobilePortrait+1) and (max-width : $mediaMobileLandscape) { @content; }
    }@else if $media == tablet-portrait { 
        @media only screen and (min-width : $mediaMobileLandscape+1) and (max-width : $mediaTabletPortrait) { @content; }
    } @else if $media == tablet-landscape { 
        @media only screen and (min-width: $mediaTabletPortrait+1) and (max-width : $mediaTabletLandscape) { @content; }
    } @else if $media == desktop {
        @media only screen and (min-width: $mediaDesktop+1) { @content; }
    }
}

/**
 * Aliases to media query keywords
 */
@mixin mobile-portrait() { @include device(mobile-portrait) { @content; } }
@mixin mobile() { @include device(mobile) { @content; } }
@mixin tablet-portrait() { @include device(tablet-portrait) { @content; } }
@mixin tablet() { @include device(tablet) { @content; } }
@mixin desktop() { @include device(desktop) { @content; } }

/**
 * Helper classes for mobile devices
 */
.showOnlyMobile {
    display:none !important;
    @include device(mobile) { display:block !important; }
}
.hideOnlyMobile {
    @include device(mobile) { display:none; }
}
.showMobile {
    @include device(mobile) { display:block !important; }
}
.hideMobile {
    @include device(mobile) { display:none; }
}

/**
 * Helper classes for mobile devices
 */
.showOnlyTablet {
    display:none !important;
    @include device(tablet) { display:block !important; }
}
.hideOnlyTablet {
    @include device(tablet) { display:none; }
}
.showTablet {
    @include device(tablet) { display:block; }
}
.hideTablet {
    @include device(tablet) { display:none; }
}
.showOnlyTabletPortrait {
    display:none !important;
    @include device(tablet-portrait) { display:block !important; }
}
.hideOnlyTabletPortrait {
    @include device(tablet-portrait) { display:none; }
}
.showTabletPortrait {
    @include device(tablet-portrait) { display:block !important; }
}
.hideTabletPortrait {
    @include device(tablet-portrait) { display:none; }
}

/**
 * Helper classes for desktop devices
 */
.showOnlyDesktop {
    display:block;
    @include device(mobile) { display:none; }
    @include device(tablet) { display:none; }
    @include device(desktop) { display:block; }
}
.hideOnlyDesktop {
    display:none;
    @include device(mobile) { display:block; }
    @include device(tablet) { display:block; }
}
.showDesktop {
    @include device(desktop) { display:block; }
}
.hideDesktop {
    @include device(desktop) { display:none; }
}