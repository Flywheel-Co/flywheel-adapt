////
/// Positioning mixins
/// This is a group of mixins to assist with positioning elements
///
/// @group Mixins\Positioning
/// @since 2.0.0
////

/// Position an element
///
/// @example `@include position(absolute, top 10px left 10px);`
///
/// @since 2.0.0
/// @param string $position - a position method
/// @param list   $args - a list of keywords and values
@mixin position($position, $args) {
	position: $position;

	@each $location in top right bottom left {
		$i: index($args, $location);

		@if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
			#{$location}: nth($args, $i + 1);
		}
	}
}

/// Position an element absolutely
///
/// @example `@include absolute(top 10px left 10px);`
///
/// @since 2.0.0
/// @alias position
/// @param list  $args - a list of locations and values
@mixin absolute($args) {
	@include position('absolute', $args);
}

/// Position an element realtively
///
/// @example `@include relative(top 10px left 10px);`
///
/// @since 2.0.0
/// @alias position
/// @param list  $args - a list of locations and values
@mixin relative($args) {
	@include position('relative', $args);
}

/// Position an element fixed in the browser
///
/// @example `@include fixed(top 10px left 10px);`
///
/// @since 2.0.0
/// @alias position
/// @param list  $args - a list of locations and values
@mixin fixed($args) {
	@include position('fixed', $args);
}