/// Convert a string to a number
///
/// @group Functions
/// @since 2.0.0
/// @param string $number
@function string-to-number($number) {
    @if type-of($number) == 'number' {
        @return $number;
    } @elseif type-of($number) != 'string' {
        $_: log( 'Unable to convert string to number because a string was not supplied.' );
    }

    $result: 0;
    $digits: 0;
    $minus: str-slice($number, 1, 1) == '-';
    $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);

    @for $i from if($minus, 2, 1) through str-length($number) {
        $char: str-slice($number, $i, $i);

        @if not (index(map-keys($numbers), $char) or $char == '.') {
            @return to-length(if($minus, -$result, $result), str-slice($number, $i));
        }

        @if $char == '.' {
            $digits: 1;
        } @else if $digits == 0 {
            $result: $result * 10 + map-get($numbers, $char);
        } @else {
            $digits: $digits * 10;
            $result: $result + map-get($numbers, $char) / $digits;
        }
    }

    @return if($minus, -$result, $result);;
}